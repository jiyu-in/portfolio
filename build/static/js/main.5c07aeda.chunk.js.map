{"version":3,"sources":["component/ScrollFadeIn.jsx","component/Clock.jsx","component/Spiral3D.jsx","component/Visual.jsx","projects/Project.jsx","projects/data/projectData.js","component/HorizontalScrollSection.jsx","component/About.jsx","App.js","reportWebVitals.js","index.js"],"names":["gsap","registerPlugin","ScrollTrigger","ScrollFadeIn","TimeDataStyled","styled","div","Clock","time","setTime","useState","Date","useEffect","timer","setInterval","clearInterval","React","createElement","className","date","toLocaleString","weekday","day","hour","minute","second","hour12","replace","formatDateTime","Root","Wrapper","Segment","props","top","index","Spiral3D","segmentsRef","useRef","wrapperRef","to","current","rotateY","i","z","Math","sin","duration","ease","repeat","timeline","scrollTrigger","trigger","start","end","scrub","forEach","el","initialRotate","initialZ","set","y","opacity","stagger","Array","from","length","map","_","key","ref","textLoop","keyframes","TitleBox","WrapBox","TextBox","ul","SloganText","Visual","titleRef","textRef","sloganRef","fromTo","bg","BoxStyled","Category","Title","ButtonStyled","a","Project","_ref","category","title","img","url","imgboxRef","width","height","delay","item","target","href","projectData","componentName","section","ScrollContainer","Card","IndicatorWrapper","IndicatorDot","active","HorizontalScrollSection","containerRef","scrollRef","activeIndex","setActiveIndex","useLayoutEffect","container","scrollContent","totalScrollWidth","scrollWidth","viewportWidth","window","innerWidth","scrollLength","ctx","context","x","pin","anticipatePin","onUpdate","self","cardWidth","scrollX","progress","min","round","revert","backgroundColor","indicator","document","querySelector","fadeInOut","create","kill","Fragment","project","idx","id","GridBackground","GradientOverlay","CreditContent","TextLine","p","TitleTextLine","CopyrightLine","Linkstyled","Cuadrado","About","rootRef","gadientRef","creditsRef","filter","Section","App","style","minHeight","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5c07aeda.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst ScrollFadeIn = () => {\n  const boxRef = useRef(null);\n  const titleRef = useRef(null);\n  const imageRef = useRef(null);\n  const buttonRef = useRef(null);\n\n  useEffect(() => {\n    gsap.fromTo(\n      boxRef.current,\n      { opacity: 0, y: 100 },\n      {\n        opacity: 1,\n        y: 0,\n        duration: 1,\n        scrollTrigger: {\n          trigger: boxRef.current,\n          start: \"40% center\",\n          end : \"30% top\",\n          scrub:true,\n          markers:true,\n        },\n      }\n    );\n      gsap.from(imageRef.current, {\n        scale: 0,\n        duration: 1,\n        delay: 0.3,\n      });\n  \n      gsap.to(buttonRef.current, {\n        x: 100,\n        opacity: 0,\n        duration: 1,\n        delay: 0.6,\n      });\n  }, []);\n\n  return (\n    <div>\n    <div\n      ref={boxRef}\n      style={{\n        width: \"300px\",\n        height: \"200px\",\n        background: \"#ff6b6b\",\n        margin: \"100vh auto\",\n        textAlign: \"center\",\n        lineHeight: \"200px\",\n        color: \"#fff\",\n        fontSize: \"1.5rem\",\n      }}\n    >\n      스크롤하면 등장!\n    </div>\n      <div style={{ padding: \"2rem\" }}>\n        <h1 ref={titleRef}>제목입니다</h1>\n        <img\n          ref={imageRef}\n          src=\"https://jiyu-in.github.io/portfolio/images/BannerLMS.jpg\"\n          alt=\"샘플 이미지\"\n          style={{ display: \"block\", margin: \"2rem 0\" }}\n        />\n        <button ref={buttonRef}>클릭해보세요</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ScrollFadeIn;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst TimeDataStyled = styled.div`\n    position: fixed;\n    right: 1rem;\n    top: 1rem;\n    font-size: 0.875rem;\n    font-weight: 600;\n    letter-spacing: -1px;\n    .title{\n        margin-right: 0.25rem;\n    }\n`;\n\n\nconst Clock = () => {\n    const [time, setTime] = useState(new Date());\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setTime(new Date());\n        }, 1000);\n    return () => clearInterval(timer);\n}, []);\n\nconst formatDateTime = (date) => {\n    const options = {\n        //timeZoneName: 'short',\n        weekday: 'short',   // Mon, Tue, ...\n        //year: 'numeric',\n        //month: 'short',     // Jan, Feb, ...\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false       // 24시간 형식\n    };\n\n    return date.toLocaleString('en-US', options).replace(/,/g, '');\n};\n\nreturn (\n    <TimeDataStyled><span className=\"title\">Date</span> {formatDateTime(time)}</TimeDataStyled>\n);\n};\n\nexport default Clock;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\n\nconst Root = styled.div`\n    position: absolute;\n    left: 50%;\n    top:25%;\n    transform: translateX(-50%);\n    /* margin-top: 40%; */\n    z-index: -1;\n`;\n\nconst Wrapper = styled.div`\n    perspective: 1000px;\n    transform-style: preserve-3d;\n    transform: rotateX(45deg) rotateZ(15deg);\n    width: 400px;\n    height: 400px;\n    position: relative;\n    @media (max-width: 480px) {\n        width: 280px;\n        height: 280px;\n    }\n`;\nconst Segment = styled.div`\n    position: absolute;\n    width: 280px;\n    height: 80px;\n    left: 30px;\n    top: ${(props) => props.top}px;\n    border-radius: 25px;\n    background: linear-gradient(135deg, rgba(199, 199, 199, 0.6), rgba(160, 160, 160, 0.3));\n    box-shadow: inset -4px -4px 10px rgba(100, 100, 100, 0.2),\n        inset 4px 4px 10px rgba(195, 195, 195, 0.1);\n    opacity: ${(props) => 1 - props.index * 0.1};\n    backdrop-filter: blur(26px);\n    transform: rotateY(${props => props.index * 20}deg) translateZ(${props => props.index * 6}px);\n    @media (max-width: 480px) {\n        width: 200px;\n        height: 50px;\n    }\n`;\n\nconst Spiral3D = () => {\n    const segmentsRef = useRef([]);\n    const wrapperRef = useRef();\n    const segmentCount = 12;\n\n    useEffect(() => {\n\n        const autoRotate = gsap.to(segmentsRef.current, {\n            rotateY: (i) => `+=${360 + i * 10}`, \n            z: (i) => Math.sin(i * 0.5) * 50,\n            duration: 6,\n            ease: 'none',\n            repeat: -1,\n        });\n\n        const timeline = gsap.timeline({\n        scrollTrigger: {\n            trigger: wrapperRef.current,\n            start: 'top 20%',\n            end: 'bottom center',\n            scrub: true,\n        },\n    });\n\n        segmentsRef.current.forEach((el, i) => {\n        const initialRotate = i * 18;\n        const initialZ = i * 6;\n\n        // 초기 상태 설정\n        gsap.set(el, {\n            rotateY: initialRotate,\n            z: initialZ,\n            y: 0,\n            });\n        });\n\n      // 1. 스크롤 내려가며 순차적으로 펼치기\n        timeline.to(segmentsRef.current, {\n        opacity: 1,\n        rotateY: 0,\n        z: 0,\n        ease: 'power2.out',\n        stagger: 0.05, // 순차 애니메이션\n        }, 0);\n\n      // 2. 행 형태로 펼쳐지도록 Y값 이동\n        timeline.to(segmentsRef.current, {\n            opacity: 0.7,\n            y: (i) => i * 100,\n            ease: 'power2.out',\n            stagger: 0.05,\n        }, '<'); // 직전 애니메이션과 동시에 시작\n\n      // 3. 스크롤 끝나면 다시 Spiral로 복귀\n        timeline.to(segmentsRef.current, {\n        rotateY: (i) => i * 18,\n        z: (i) => i * 6,\n        y: 0,\n        ease: 'power2.inOut',\n        stagger: 0.05,\n      }, '+=0.3'); // 잠깐 쉬고 복귀\n    }, []);\n\n    return (\n        <Root>\n            <Wrapper>\n            {Array.from({ length: segmentCount }).map((_, i) => (\n                <Segment \n                    key={i}\n                    index={i}\n                    top={i * 10}\n                    ref={(el) => (segmentsRef.current[i] = el)}\n                />\n            ))}\n            </Wrapper>\n        </Root>\n    );\n};\n\nexport default Spiral3D;\n","import React, { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport styled, {keyframes} from 'styled-components';\nimport Spiral3D from \"./Spiral3D\";\n\n\nconst textLoop = keyframes`\n  0% {\n    transform : translate3d(50%, 0, 0);\n  }\n  100% {\n    transform : translate3d(-100%, 0, 0);\n  }\n`;\n\nconst Root = styled.div`\n  position: relative;\n  height: 100%;\n  & *{\n    color: #131313;\n  }\n`;\n\nconst TitleBox = styled.div`\n  font-family: \"Gothic A1\", sans-serif;\n  font-size: 6rem;\n  font-weight: 900;\n  letter-spacing: 1px;\n  padding: 40vh 0 4rem 0;\n  @media (max-width: 786px) {\n    font-size: 4rem;\n  }\n`;\n\nconst WrapBox = styled.div`\n  max-width: 100vw;\n  overflow: hidden;\n`;\nconst TextBox = styled.ul`\n  display: flex;\n  font-size: 0.85rem;\n  white-space:nowrap;\n  animation: ${textLoop} 16s linear infinite; \n  & li{\n    padding: 0 4rem;\n    list-style: none;\n  }\n  @media (max-width: 786px) {\n    & li{\n      padding: 0 1rem;\n    }\n  }\n`;\n\nconst SloganText = styled.div`\n  position: absolute;\n  left: 50%;\n  bottom:10%;\n  transform: translate(-50%, 0);\n  width: 80%;\n  max-width: 1440px;\n  min-width: 320px;\n  text-align: center;\n  word-break: keep-all;\n  & p{\n    margin: 0;\n    font-size: 0.875rem;\n    letter-spacing: -0.54px;\n  }\n`;\n\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst Visual = () => {\n  const titleRef = useRef(null);\n  const textRef = useRef(null);\n  const sloganRef = useRef(null);\n\n  useEffect(() => {\n\n    gsap.fromTo(\n      titleRef.current,\n      { opacity: 1, y: 0 },\n      {\n        opacity: 0,\n        y: -40,\n        duration: 1,\n        scrollTrigger: {\n          trigger: titleRef.current,\n          start: \"20% top\",\n          scrub:true,\n        },\n      }\n    );\n    gsap.fromTo(\n      textRef.current,\n      { opacity: 1, y: 0 },\n      {\n        opacity: 0,\n        y: 40,\n        duration: 1,\n        scrollTrigger: {\n          trigger: textRef.current,\n          start: \"top 40%\",\n          scrub:true,\n        },\n      }\n    );\n\n  }, []);\n\n  return (\n    <Root>\n      <Spiral3D/>\n      <TitleBox ref={titleRef}>\n        Portfolio\n      </TitleBox>\n      <WrapBox>\n        <TextBox ref={textRef}>\n          <li>Figma</li>\n          <li>Adobe Photoshop</li>\n          <li>Adobe Illustrator</li>\n          <li>HTML&CSS</li>\n          <li>JavaScript</li>\n          <li>React.js</li>\n          <li>SCSS</li>\n          <li>GitHub</li>\n        </TextBox>\n      </WrapBox>\n      <SloganText ref={sloganRef}>\n        <p>사용자 경험을 기획하고 디자인하며 퍼블리싱으로 웹 상에서 동적으로 보여지는 화면을 구현하며 새로운 컨텐츠를 만들어내는 일을 좋아합니다.</p>\n        <p>이제는 기술과 디자인을 결합한 창의적인 웹 애플리케이션을 만드는 데 더욱 집중하고 있습니다.</p>\n      </SloganText>\n    </Root>\n  );\n};\n\nexport default Visual;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\n\ngsap.registerPlugin(ScrollTrigger);\nconst Root = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bg});\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: cover;\n`;\nconst MaskBg = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    background-image: radial-gradient(#5d5d5d 1px, #5d5d5d, #333 2px);\n    background-size: 20px 20px;\n    mask: linear-gradient(rgba(0, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0.5) 50%, rgba(0, 0, 0, 0.1) 100%);\n    z-index: 0;\n    &:hover{\n        background: none;\n        transition: background 3s ;\n    }\n`;\n\nconst BoxStyled = styled.div`\n    position: absolute;\n    left: 1rem;\n    top: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap:8px;\n    /* mix-blend-mode: difference; */\n    color:#fff;\n    padding:24px;\n    & p{\n        color:#fff;\n    }\n`;\n\nconst Category = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap:6px;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    & li{\n        font-size: 0.75em;\n        font-weight: 400;\n        letter-spacing: -0.45px;\n        word-break: keep-all;\n    }\n`;\n\nconst Title = styled.div`\n    text-align: left;\n    & p{\n        font-size: 1.5rem;\n        font-weight: 600;\n        margin: 0;\n        font-family:  \"Gothic A1\", sans-serif ;\n    }\n`;\n\nconst ButtonStyled = styled.a`\n    position: absolute;\n    right: 40px;\n    bottom: 40px;\n    background: transparent;\n    padding:0.75rem 0.5rem;\n    font-size: 0.75rem;\n    color:#131313;\n    text-transform: uppercase;\n    text-decoration: none;\n    letter-spacing: -0.28px;\n    border: 0 none;\n    background-color: #fff;\n    backdrop-filter: blur(4px);\n    z-index: 9999;\n`;\n\n\nconst Project = ({category, title, img, url}) => {\n    const imgboxRef = useRef(null);\n\n    useEffect(() => {\n        gsap.fromTo(\n            imgboxRef.current,\n            { \n                width: \"80%\",\n                height: \"80%\",\n            },\n            {\n                width: \"100%\",\n                height: \"100%\",\n                duration: 2,\n                delay: 0.6,\n            scrollTrigger: {\n                trigger: imgboxRef.current,\n                start: \"center 80%\",\n                end: \"center 20%\",\n                scrub:1.5,\n                // ease: \"power2.out\",\n                ease: \"back.out(4)\",\n                // markers:true,\n            },\n            });\n    }, []);\n\n    return (\n        <Root ref={imgboxRef} bg={img}>\n            {/* <MaskBg/> */}\n            <BoxStyled>\n                <Category>\n                    {category.map((item, index) => (\n                            <li key={index}>{item}</li>\n                    ))}\n                </Category>\n                <Title><p>{title}</p></Title>\n            </BoxStyled>\n            <ButtonStyled target=\"_blank\" href={url}>Learn more</ButtonStyled>\n        </Root>\n    );\n};\n\nexport default Project;\n","export const projectData = [\n    { \n        category:[\"Real estate\", \"Asset management\"],\n        title: \"개인자산관리\",\n        img: \"/assets/ProjectFinance.jpg\",\n        url:\"https://sumptuous-amaryllis-ad1.notion.site/1967cdfc3fd08149b708d50a1eb4f2d8?pvs=4\",\n        componentName: \"Dabang\",\n    },\n    { \n        category:[\"Education\", \"Enterprise solutions\"],\n        title: \"비대면 LMS(학습관리시스템) 사이트\",\n        img: \"/assets/LMS.jpg\",\n        url:\"https://sumptuous-amaryllis-ad1.notion.site/LMS-1bf7cdfc3fd0805aa481fc322f427fe9\",\n        componentName: \"OnlineEduSystem\",\n    },\n    { \n        category:[\"Digital rights management\"],\n        title: \"음성 저작권인 VOICE 비즈니스 모델\",\n        img: \"/assets/Dubidub.jpg\",\n        url:\"https://sumptuous-amaryllis-ad1.notion.site/VOICE-1a67cdfc3fd080b3a918e6011d1e3e94?pvs=4\",\n        componentName: \"ProjectVoiceEntertainment\",\n    },\n    { \n        category:[\"AI\", \"Smart mobility\"],\n        title: \"TBN 교통혼잡예보 서비스\",\n        img: \"/assets/TBN.jpg\",\n        url:\"https://sumptuous-amaryllis-ad1.notion.site/TBN-1967cdfc3fd081d1bd8fe75ac30fa625\",\n        componentName: \"ProjectTrafficPrediction\",\n    },\n    { \n        category:[\"Blockchain\", \"Financial services\"],\n        title: \"가상화폐거래소 UI&UX\",\n        img: \"/assets/Exchange.jpg\",\n        url:\"https://sumptuous-amaryllis-ad1.notion.site/UI-UX-1967cdfc3fd081d5a9efd3cb48cd5a10\",\n        componentName: \"ProjectCryptoExchange\",\n    },\n    { \n        category:[\"Education\", \"Media & content platforms\"],\n        title: \"한국방송예술교육진흥원 리뉴얼 및 행사포스터 \",\n        img: \"/assets/KBAS.jpg\",\n        url:\"https://sumptuous-amaryllis-ad1.notion.site/1a77cdfc3fd0808dafa8e468a8f84302?pvs=42\",\n        componentName: \"ProjectKoreaBroadcastArts\",\n    },\n    {  \n        category:[\"Education\", \"Public sector websites\"],\n        title: \"서울대학교 학과 페이지 리뉴얼\",\n        img: \"/assets/Snu.jpg\",\n        url:\"https://sumptuous-amaryllis-ad1.notion.site/1967cdfc3fd081eb9bcfd81e7cd80d4d\",\n        componentName: \"SnuDeptRenewal\",\n    }\n]\n","import React, { useRef, useLayoutEffect, useEffect, useState } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport styled from \"styled-components\";\nimport Project from \"../projects/Project\";\nimport { projectData } from \"../projects/data/projectData\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst Wrapper = styled.section`\n    width: 100%;\n    height: 100vh;\n    overflow: hidden;\n    position: relative;\n`;\n\nconst ScrollContainer = styled.div`\n    display: flex;\n    height: 100%;\n    width: fit-content;\n    padding: 0 6%;\n    box-sizing: border-box;\n`;\n\nconst Card = styled.div`\n    min-width: 80vw;\n    height: 75%;\n    margin: auto 2vw;\n    background: rgba(255, 255, 255, 0.15);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    backdrop-filter: blur(16px);\n`;\n\nconst IndicatorWrapper = styled.div`\n    position: fixed;\n    bottom: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    opacity: 0;\n    z-index: 20;\n`;\n\nconst IndicatorDot = styled.div`\n    width: 16px;\n    height: ${({ active }) => (active ? \"16px\" : \"1px\")};\n    border: 1px solid #131313;\n    transition: all 0.3s;\n`;\n\nconst HorizontalScrollSection = () => {\n    const containerRef = useRef(null);\n    const scrollRef = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    useLayoutEffect(() => {\n    const container = containerRef.current;\n    const scrollContent = scrollRef.current;\n\n    const totalScrollWidth = scrollContent.scrollWidth;\n    const viewportWidth = window.innerWidth;\n    const scrollLength = totalScrollWidth - viewportWidth;\n\n    const ctx = gsap.context(() => {\n        gsap.to(scrollContent, {\n            x: -scrollLength,\n            ease: \"none\",\n            scrollTrigger: {\n            trigger: container,\n            start: \"top top\",\n            end: () => `+=${totalScrollWidth}`,\n            scrub: true,\n            pin: true,\n            anticipatePin: 1,\n            onUpdate: (self) => {\n                const cardWidth = totalScrollWidth / projectData.length;\n                const scrollX = self.progress * totalScrollWidth;\n                const index = Math.min(\n                projectData.length - 1,\n                Math.round(scrollX / cardWidth)\n                );\n                setActiveIndex(index);\n            },\n            },\n        });\n        }, containerRef);\n\n    return () => ctx.revert();\n    }, []);\n\n    useEffect(() => {\n        gsap.to(containerRef.current, {\n        backgroundColor: \"rgba(160, 160, 160, 0.3)\",\n        scrollTrigger: {\n            trigger: containerRef.current,\n            start: \"top top\",\n            end: \"bottom top\",\n            scrub: true,\n        },\n        });\n    }, []);\n\n    useEffect(() => {\n        const indicator = document.querySelector(\"#indicator\");\n        const fadeInOut = ScrollTrigger.create({\n        trigger: containerRef.current,\n        start: \"top top\",\n        end: \"bottom+=700% top\",\n        //   end: \"+=700%\",\n        scrub: true,\n        onUpdate: (self) => {\n            const progress = self.progress;\n            const opacity = progress < 0.01 || progress > 0.95 ? 0 : 1;\n            gsap.to(indicator, {\n            opacity,\n            duration: 0.3,\n            ease: \"power2.out\",\n            });\n        },\n        });\n        return () => fadeInOut.kill();\n    }, []);\n\n    return (\n    <>\n        <Wrapper ref={containerRef}>\n            <ScrollContainer ref={scrollRef}>\n            {projectData.map((project, idx) => (\n                <Card key={project.id}>\n                <Project\n                    category={project.category}\n                    title={project.title}\n                    img={project.img}\n                    url={project.url}\n                />\n                </Card>\n            ))}\n            </ScrollContainer>\n        </Wrapper>\n\n        <IndicatorWrapper id=\"indicator\">\n            {projectData.map((_, i) => (\n            <IndicatorDot key={i} active={i === activeIndex} />\n            ))}\n        </IndicatorWrapper>\n        </>\n    );\n};\n\nexport default HorizontalScrollSection;\n","import React, { useEffect, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport styled from \"styled-components\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst Wrapper = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100vh;\n    background: rgb(228 228 228);\n    overflow: hidden;\n`;\nconst GridBackground = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-size: 20px 20px;\n    background-image: \n        linear-gradient(to right, rgba(255, 255, 255, 0.15) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(255, 255, 255, 0.15) 1px, transparent 1px);\n    mask: linear-gradient(rgba(0, 0, 0, 0) 0%, rgb(0, 0, 0) 50%, rgba(0, 0, 0, 0) 100%);\n    z-index: 30;\n`;\n\nconst GradientOverlay = styled.div`\n  background-color: black;\n  width: 100%;\n  height: 0;\n  z-index: 10;\n  pointer-events: none;\n  &:after{\n    content: \"\";\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-size: 20px 20px;\n    background-image: \n        linear-gradient(to right, rgba(255, 255, 255, 0.07) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(255, 255, 255, 0.07) 1px, transparent 1px);\n    mask: linear-gradient(rgba(0, 0, 0, 0) 0%, rgb(0, 0, 0) 50%, rgba(0, 0, 0, 0) 100%);\n    z-index: 30;\n  }\n`;\n\n\nconst CreditContent = styled.div`\n    position: absolute;\n    top: 50%;\n    left:50%;\n    display: inline-flex;\n    flex-direction: column;\n    width: 80%;\n    transform: rotateX(15deg) translate(-50%, -50%);\n    transform-origin: center center;\n    will-change: transform;\n    z-index: 20;\n    color: #fff;\n    /* backdrop-filter: blur(10px); */\n`;\n\nconst TextLine = styled.p`\n  font-size: 0.875rem;\n  margin: 0;\n  text-align: center;\n  color: #d1d1d1;\n`;\nconst TitleTextLine = styled(TextLine)`\n  margin-bottom: 20px;\n  font-size: 1rem;\n  font-weight: 700;\n  color: #fff;\n`;\n\nconst CopyrightLine = styled(TextLine)`\n  margin-top: 20px;\n  font-size: 0.75rem;\n  font-weight: 400;\n  color: #777;\n`;\n\n\nconst Linkstyled = styled.a`\n    position: relative;\n    max-width: 480px;\n    background: #ffffff0d;\n    color: #fff;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    text-transform: uppercase;\n    backdrop-filter: blur(4px);\n    margin: 2rem auto;\n    padding: 0.5rem 3rem;\n`;\n\nconst Dashed = styled.div`\n    position: absolute;\n    left: 0;\n    top:0;\n    width: 100%;\n    height: 100%;\n    border: 2px dashed #a7df00;\n    box-shadow: 0 0 10px 180px #1717179c;\n`;\n\nconst Cuadrado = styled.div`\n    width: 7px;\n    height: 7px;\n    position: absolute;\n    &.cuad1{top: -10px; left: -5px; }\n    &.cuad2{top: -10px; right: 0px;}\n    &.cuad3{bottom: 4px; left: -5px; }\n    &.cuad4{bottom: 4px; right: 0px; }\n`;\n\n\nconst About = () => {\n    const rootRef = useRef(null);\n    const gadientRef = useRef(null);\n    const creditsRef = useRef(null);\n  \n    useEffect(() => {\n      gsap.fromTo(\n        gadientRef.current,\n        { opacity: 0, height:0, filter:'blur(120px)'},\n        {\n          opacity: 1,\n          height:\"100vh\",\n          filter:'blur(0px)',\n          duration: 1,\n          scrollTrigger: {\n            trigger: rootRef.current,\n            start: \"top center\",\n            end:\"bottom bottom\",\n            scrub:true,\n            ease: 'power2.inOut',\n            duration:2,\n          },\n        }\n      );\n    //   gsap.fromTo(creditsRef.current, \n    //     {y: \"0%\",},\n    //     {\n    //     y: \"50%\",\n    //     ease: 'power2.inOut',\n    //     scrollTrigger: {\n    //       trigger: creditsRef.current,\n    //       start: \"top center+=200\",\n    //       end: \"+=2000\",\n    //       scrub: true,\n    //     },\n    //   });\n    }, []);\n    return (\n    <Wrapper ref={rootRef}>\n        <GradientOverlay ref={gadientRef} />\n        <GridBackground/>\n        <CreditContent ref={creditsRef}>\n            <TitleTextLine>Thank you for staying with me until the end.</TitleTextLine>\n            <TextLine>With expertise in creative UI/UX design and web publishing, I deliver user-centered and innovative web experiences.</TextLine>\n            <Linkstyled href=\"https://www.notion.so/UI-UX-Designer-Web-publisher-1957cdfc3fd0802ba4abf011c0a587df\" target=\"_blank\">\n                {Array.from({ length: 4 }).map((_, index) => (\n                  <Cuadrado key={index} className={`cuad${index+1}`}>+</Cuadrado>\n                ))}\n                Notion \n            </Linkstyled>\n            <CopyrightLine>© 2025. All rights reserved</CopyrightLine>\n        </CreditContent>\n    </Wrapper>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport './App.css';\nimport ScrollFadeIn from './component/ScrollFadeIn';\nimport Clock from \"./component/Clock\";\nimport Visual from \"./component/Visual\";\nimport styled from 'styled-components';\nimport HorizontalScrollSection from \"./component/HorizontalScrollSection\";\nimport About from \"./component/About\";\n\nconst Section = styled.div`\n  /* height: 100vh; */\n  width: 100%;\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Clock/>\n      <Section style={{height:'100vh'}}> \n        <Visual/>\n      </Section>\n      <Section style={{minHeight:'100vh'}}>\n        <HorizontalScrollSection/>\n      </Section>\n      <Section>\n        <About/>\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}